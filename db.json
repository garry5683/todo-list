{
  "prices": [
    {
      "id": "96e9",
      "Item": "Twist Mop Normal",
      "Price": "140"
    },
    {
      "id": "3407",
      "Item": "Bathroom Cleaner Steel",
      "Price": "60"
    },
    {
      "id": "44fd",
      "Item": "Brooms lady 135/-",
      "Price": "90"
    },
    {
      "id": "f42a",
      "Item": "Bucket 113",
      "Price": "110"
    },
    {
      "id": "f2a6",
      "Item": "Bucket 120",
      "Price": "170"
    },
    {
      "id": "3d1d",
      "Item": "Mug 1500",
      "Price": "25"
    },
    {
      "id": "3058",
      "Item": "Dust Bin With Cap",
      "Price": "195"
    }
  ],
  "topics": [
    {
      "id": "4729",
      "topic": "Angular",
      "explanation": [
        {
          "subtopic": "Angular",
          "explanation": "Single page Application \n Component based architecture \n Supports two-way data binding \n TypeScript \n Large community and ecosystem \n High performance \n Mobile development"
        }
      ]
    },
    {
      "id": "8323",
      "topic": "Introduction",
      "explanation": [
        {
          "subtopic": "Introduction",
          "explanation": "Hello, I’m Garry David a frontend developer with 2 years of experience in developing user-friendly web applications using Angular."
        },
        {
          "subtopic": "Projects",
          "explanation": "In my previous role at MACOM, I have worked on various projects such as \n Loan management Systems which digitalized the entire loan management process \n smart form builder where the users can create their own forms and generate report like the google forms \n a collection app created using angular and cordova for mobile users."
        },
        {
          "subtopic": "Skills",
          "explanation": "I’m also used familier with tools and frameworks such as\nburp suite for penitration testing\nChrome devtools and lighthouse for performance analysis and optimisation.\nand GIT for version control."
        },
        {
          "subtopic": "Conclusion",
          "explanation": "I’m always looking for opportunities to improve my skills and I’m currently looking for a new role as an Angular developer where I can apply my expertise and contribute to the success of the team and the company."
        },
        {
          "subtopic": "Main Soft Skills",
          "explanation": "Good in understanding the client requirements\n Good at explaing the topics\nDebugging and finding solutions for problems"
        },
        {
          "subtopic": "Stressful Situations",
          "explanation": "I will take a Coffee break while thinking about possible solutions\n I will also ask for suggestions from my peers if needed."
        },
        {
          "subtopic": "Why Work Here",
          "explanation": "I’ve been actively searching for jobs and the job description matched up well with my background so I applied for it."
        }
      ]
    },
    {
      "id": "da12",
      "topic": "CTC",
      "explanation": [
        {
          "subtopic": "Current",
          "explanation": "340022 Per year \n 3.4 LPA  \n 28335 Per month"
        },
        {
          "subtopic": "Expected",
          "explanation": "6-7 LPA"
        }
      ]
    },
    {
      "id": "91e2",
      "topic": "DevTools",
      "explanation": [
        {
          "subtopic": "DevTools",
          "explanation": "For CSS and HTML Dom manipulations\nand for debugging the JavaScript using Source panel"
        }
      ]
    },
    {
      "id": "5168",
      "topic": "Decorators",
      "explanation": [
        {
          "subtopic": "Decorators",
          "explanation": "Decorators are used for enhancing and configuring classes, they provide metadata that Angular uses to define and configure different aspects of the application."
        },
        {
          "subtopic": "@Component",
          "explanation": "Decorates a class as an Angular component, providing metadata for the component."
        },
        {
          "subtopic": "@Directive",
          "explanation": "Decorates a class as an Angular directive, providing metadata for the directive."
        },
        {
          "subtopic": "@Injectable",
          "explanation": "Decorates a class as an injectable service. Angular's dependency injection system uses this metadata to provide instances of the service."
        },
        {
          "subtopic": "@Input",
          "explanation": "Decorates a class property, indicating that the property's value will be supplied from the parent component."
        },
        {
          "subtopic": "@Output",
          "explanation": "Decorates a class property, indicating that the property can emit events to be handled by the parent component."
        },
        {
          "subtopic": "@NgModule",
          "explanation": "Decorates a class as an Angular module, providing metadata for the module."
        },
        {
          "subtopic": "@ViewChild",
          "explanation": "Decorates a class property, allowing you to query and access child components or elements in the view."
        }
      ]
    },
    {
      "id": "ea25",
      "topic": "LifeCycleHooks",
      "explanation": [
        {
          "subtopic": "ngOnChanges",
          "explanation": "Runs after an input/output binding has been changed."
        },
        {
          "subtopic": "ngOnInit",
          "explanation": "Runs after a component has been initialized. Input bindings are ready."
        },
        {
          "subtopic": "ngDoCheck",
          "explanation": "Allows developers to perform custom actions during change detection."
        },
        {
          "subtopic": "ngAfterContentInit",
          "explanation": "Runs after the content of a component has been initialized."
        },
        {
          "subtopic": "ngAfterContentChecked",
          "explanation": "Runs after every check of a component's content."
        },
        {
          "subtopic": "ngAfterViewInit",
          "explanation": "Runs after the view of a component has been initialized."
        },
        {
          "subtopic": "ngAfterViewChecked",
          "explanation": "Runs after every check of a component's view."
        },
        {
          "subtopic": "ngOnDestroy",
          "explanation": "Runs before a component is destroyed."
        }
      ]
    },
    {
      "id": "b0d3",
      "topic": "Cross-Browser Compatibility",
      "explanation": [
        {
          "subtopic": "Cross-Browser Compatibility",
          "explanation": "Broken layouts - absolute positioning\nVisual inconsistencies\nMissing functionality - missing features in latest versions"
        }
      ]
    },
    {
      "id": "4381",
      "topic": "Security",
      "explanation": [
        {
          "subtopic": "Security",
          "explanation": "Encryption AES and RSA \ncross site scripting - security header\nAuthorization Token and two factor authentication\nCSRF token \nusing of POST method instead of GET\nVersion Upgrade\nValidations"
        }
      ]
    },
    {
      "id": "bab1",
      "topic": "Performance",
      "explanation": [
        {
          "subtopic": "Performance",
          "explanation": "AOT Compilation\nLazy Loading components and images\nCaching of frequent accessed data\nusage of CDN\nReducing the size of LCP and FCP "
        }
      ]
    },
    {
      "id": "5079",
      "topic": "Data Binding",
      "explanation": [
        {
          "subtopic": "Interpolation {{}}",
          "explanation": "Data flows from component to the view and we can mix the same with HTML page."
        },
        {
          "subtopic": "Property Binding []",
          "explanation": "Data flows from component to the view  eg: [value]"
        },
        {
          "subtopic": "Event Binding ()",
          "explanation": "when you want to send event from the view to the component . eg: (click)"
        },
        {
          "subtopic": "Two Way Binding [()]",
          "explanation": "Data flows from component to the view and vice versa. Eg [(ngModel)]"
        }
      ]
    },
    {
      "id": "fc94",
      "topic": "Splice and Slice",
      "explanation": [
        {
          "subtopic": "Splice",
          "explanation": "splice method is used to change the contents of an array by removing or replacing existing elements by adding new elements in place."
        },
        {
          "subtopic": "Slice",
          "explanation": "slice method returns a portion of an array into a new array."
        }
      ]
    },
    {
      "id": "8cae",
      "topic": "Oops",
      "explanation": [
        {
          "subtopic": "Encapsulation",
          "explanation": "Encapsulation refers to the bundling of data and the methods that operate on the data into a single unit known as a class.\nIt helps in restricting access to some of the object's components and preventing unintended interference."
        },
        {
          "subtopic": "Inheritance",
          "explanation": "Inheritance allows a class to inherit the properties and methods of super class.\nIt promotes code reuse and establishes a hierarchy of classes."
        },
        {
          "subtopic": "Polymorphism",
          "explanation": "Polymorphism allows objects of different classes to be treated as objects of a common base class.\nIt enables a single interface to represent different types of objects."
        },
        {
          "subtopic": "Abstraction",
          "explanation": "Abstraction involves hiding the complex reality while exposing only the necessary parts.\nAbstract classes and interfaces are used to achieve abstraction."
        }
      ]
    },
    {
      "id": "1273",
      "topic": "Pipes",
      "explanation": [
        {
          "subtopic": "Pipes",
          "explanation": "Pipes are a way to transform data in templates before displaying it."
        }
      ]
    },
    {
      "id": "c7a0",
      "topic": "Directives",
      "explanation": [
        {
          "subtopic": "Directives",
          "explanation": "Directives extend the behavior of HTML elements in template."
        },
        {
          "subtopic": "Attribute Directives",
          "explanation": "Attribute Directives change the appearance or behavior of an element.\nNgClass, NgStyle"
        },
        {
          "subtopic": "Structural Directives",
          "explanation": "Structural Directives alter the structure of the view by adding, removing, or manipulating elements in the DOM\nNgIf, NgFor"
        },
        {
          "subtopic": "Custom Directives",
          "explanation": "can be identified by @directive()\nng g d mydirective"
        }
      ]
    },
    {
      "id": "f7ce",
      "topic": "Lazy Loading",
      "explanation": [
        {
          "subtopic": "Lazy Loading",
          "explanation": "Lazy loading in Angular is a technique that defers the loading of certain modules until they are actually needed\nhelps in reducing initial bundle size"
        }
      ]
    },
    {
      "id": "cc10",
      "topic": "Var Let Const",
      "explanation": [
        {
          "subtopic": "Var",
          "explanation": "var - function-scoped \nThey are visible throughout the entire function"
        },
        {
          "subtopic": "Let",
          "explanation": "let - block-scoped\nThey are limited to the block where they are defined."
        },
        {
          "subtopic": "Const",
          "explanation": "const - block-scoped\nSimilar to let but values cannot be re-assigned\n"
        }
      ]
    },
    {
      "id": "c793",
      "topic": "asynchronous Operations",
      "explanation": [
        {
          "subtopic": "Promises",
          "explanation": "Promises handle a single asynchronous operation that produces either a resolved value or an error.\nit has 2 parameters resolve and reject."
        },
        {
          "subtopic": "Observables",
          "explanation": "Observables handle streams of multiple values over time. They can emit multiple values, errors, and a completion signal.\nsubscribe method to handle emitted values, errors, and the completion of the observable.\nunsubscribe method allows stopping the subscription and cleaning up resources."
        },
        {
          "subtopic": "Async/Await",
          "explanation": "async/await is used to simplify working with promises it allows to write asynchronous code that looks more like synchronous code for easier maintainability.\nerror can be handled by using try catch mechanism."
        }
      ]
    },
    {
      "id": "d5a3",
      "topic": "Callback Function",
      "explanation": [
        {
          "subtopic": "Callback Function",
          "explanation": "a function that calls itself\na function passed as an argument to another function"
        }
      ]
    },
    {
      "id": "a305",
      "topic": "Class Objects Interface",
      "explanation": [
        {
          "subtopic": "Class",
          "explanation": "Class is a template or a blueprint It defines properties (attributes) and behaviors"
        },
        {
          "subtopic": "Objects",
          "explanation": "Objects are real-world entities which have properties and beheviours/methods"
        },
        {
          "subtopic": "Interface",
          "explanation": "Contains only method signatures"
        }
      ]
    },
    {
      "id": "99ef",
      "topic": "DOM",
      "explanation": [
        {
          "subtopic": "DOM",
          "explanation": "Document Object Model DOM treats each elements as an object and creates a tree like structures"
        }
      ]
    },
    {
      "id": "6785",
      "topic": "State Management",
      "explanation": [
        {
          "subtopic": "State Management",
          "explanation": "for handling data that needs to be shared across multiple components within the application\nIt helps maintain consistency, improves performance, and simplifies complex applications"
        },
        {
          "subtopic": "Component State",
          "explanation": "andling data specific to a single component it uses @Input & @Output Decorators to pass data in and out of the component"
        },
        {
          "subtopic": "Services",
          "explanation": "manage data that needs to be shared across multiple components it use the @Injectable decorator to create a service that can be injected into components."
        },
        {
          "subtopic": "State Management Libraries - NgRx",
          "explanation": "For complex applications with extensive data sharing.\nIt follows principles of unidirectional data flow.\nits building blocks includes Actions,Reducers,Effects and selectors."
        },
        {
          "subtopic": "Actions",
          "explanation": "components dispatch events called actions to update the state"
        },
        {
          "subtopic": "Reducers",
          "explanation": "the state changes are handled by functions called reducers which modifies the current state"
        },
        {
          "subtopic": "Effects",
          "explanation": "Effects enable the usage of asynchronous operations such as api calls."
        },
        {
          "subtopic": "Selectors",
          "explanation": "selectors extract specific pieces of state form overall application state for using it in different components in application."
        }
      ]
    },
    {
      "id": "ce33",
      "topic": "Dependency Injection",
      "explanation": [
        {
          "subtopic": "Dependency Injection",
          "explanation": "mechanism for creating and delivering some parts of an application to other parts of an application that require them\nComponents, Directives"
        }
      ]
    },
    {
      "id": "a97a",
      "topic": "Enum",
      "explanation": [
        {
          "subtopic": "Enum",
          "explanation": "Represents a group of constants.\nenum Level {LOW, MEDIUM, HIGH};\nBy default, the first item (LOW) has the value 0, the second (MEDIUM) has the value 1, etc.\nenum Level myVar = MEDIUM;"
        }
      ]
    },
    {
      "id": "04e2",
      "topic": "Resigned Reason",
      "explanation": [
        {
          "subtopic": "Resigned Reason",
          "explanation": "I had been with the organization for about 2.4 years and I don't feel there was an opportunity to advance further so I thought a change would best for my career."
        }
      ]
    }
  ]
}